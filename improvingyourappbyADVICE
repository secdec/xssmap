base64 encoded 
VGlwIHRvIGltcHJvb3ZlIHhzcyBhcHAhISEKT3BlbiBnYXRlIG9mIGJyYWluIHdpdGggc2FsdmlhIGRpdm5vcnVtIChzYWdlIGhpZ2gpIGFuZCByZWFkLiBEaWZmZXJlbnQgcHJvZ3JhbW1pbmcgbGFuZ3VhZ2UgaGFzIGRpZmZlcm50IGxpYnJhcmllcyBzbyB3cml0ZSB0aGlzIGFwbCBpbiBkaWZmZXJlbnQgbGFuZyBpZiB1IGNhbi4uIE5ldyBpZGVhcyBjYW4gY29tZS4gRG9udCB3b3JyeQpEb21iYXNlZCAsZmxhc2hlZCBiYXNlZCBhbmQgb3RoZXIgeHNzIHR5cGUgc2hvdWxkIGJlIHRha2VuIGNhcmUuLiBUaGV5IGFyZSBlc3NlbnRpYWwgZm9yIG1ha2luZyBhIGdvb29kIGFwcC4gTGVhcm5pbmcgcHJvZ3JhbW1pbmcgY29uY2VwdHMvaWRlYSBpaXMgYWxzbyBnb29kLi4uIExpa2UgeHNzbmlwZXIgaGFzIG9wdGlvbiBvZiBjb29raWUsIHNvbWUgY29sbGVjdCBkYXRhIHRvIGZpbmQgaW5mbyByZWNvbiBhbmQgc2VhcmNoIGZvciB4c3NzLi4gWHNzZWVyIGlzIGdvb2QgYnV0IGhhdmUgbG90IG9mIG9wdGlvbnMgYW5kIHRoZXkganVzdCBkZXN0cm95IHRoZSBtb29kLCBoYW5nIG9mdGVuIG9yIGRvbnQgd29yay4gVGFtcGVyc2NyaXB0IHN1Y2ggYXMgZW5jb2RpbmcgYW5kIGRvYi4uIEVuY29kaW5nIHNjcmlwdCBpcyBlc3NlbnRpYWwuIEV2ZW4gdSBjYW4gbGVhcm4gZnJvbSBzcWxtYXAuc2ltaWxhcmx5IG90aGVyIHRoaWluZ3MgYXJlIHRvIGJlIGNvbnNpZHdyZWQgd2hpbGUgZGV2ZWxvcGlpaW5nIGFuZCBpbXByb3ZpaW5nIHhzcyBhcHBzLgpOZXcgbW9kaWZpY2F0aW9ucyBvawoKWHNzIGlzIG5vdCBpbiBpbnB1dCBvbmx5IGl0cyBlY2VyeXdoZXJlIGluIGhlYWRlcnMuLiBXaGVyZXZlciBpdCBnZXRzIHJlZmxlY3RlZCBpdHMgdGhlcmUuLiBJZiB1IHN0b3JlIHNvbWUgZGF0YSB0aGVuIHRoZXIncyB4c3MuLiBNb3Jlb3ZlciB4c3MgbWF5YmUgaW4gcG9zdCBkYXRhIGFuZCBsb3RzLi4KU28gZGV2ZWxvcCB5b3VyIGFwcCBzbyB0aGF0IGlpdCBwbGFjZXMgcGF5bG9hZCBldmVyeXdoZXJlIGFuZCB0ZXN0IGZvciByZXNwb25zZS4uIENyZWF0ZSBhIGRvbWFpbi4uLiBQbGF5IHdpdGggZG9tYWluIGFuZCB5b3VyIGFwcC4uIEluY3JlYXNlIHNlY3VyaXR5IG9mIGRvbWFpbiBzbyB0aGF0IGNlcnRhaW4gc2NyaXB0dCBvbmx5IHdvcmsuLiBUaGVuIHVzZSB5b3VyIGFwcCB0ZXN0IGl0CgpIRVkgQUREIEZFQWFUVVJFIE9GIC0tY29va2llIHBhcmFtZXRlciBiZWFjYXVzZSB5b3UgY2FudCB0ZXN0IGluIG9uIG1hbnkgd2ViIHNpdGVzIGFuZCBhcHBzIGxpa2UgYldBUFAgLGR2d2EuCjEpRmlyc3QgaW5zdGFsbCBiV0FQUCBhYW5kIGdvdG8gUmVmbGVjdGVkIFhTUyBwYWdlLgoyKVRoZW4gdHJ5IHVzaW5nIHRoZSBhcHAuIEl0IHdpbGwgZmFpaWwgLgozKVVzZSBidXJwIHRvIHNlZSB0aGUgcmVxdWVzdCBhbmQgZmluZCBjb29raWUgcGFyYW1ldGVyCjQpRG93bmxvYWQgWFNTbmlwZXIgYXBwIGFuZCB1c2luZyAtLWNvb2tpZT0iY29va2llZGF0YSIgeW91IGNhbiBmaW5kIHhzcyB2dWxuZXJhYmlsaXR5IGJ1dCBkb2VzbnQgd29yayBpbiBvdGhlciBhcHAgYXMgaXQgZG9lc250IGhhdmUgLS1jb29raWUgZmVhdHVyZS5QbHogbWFrZSB0aGlzIGZlYXR1cmUgYXZhaWxhYmxlLgptb3Jlb3ZlcgoKSEVZLiBGUk9NIEhFUkUgUkVRVUVTVCBPRiBORVcgU0VDT05EIEZFQVRVUkUgU1RBUlRTLgpXaGF0IGlzIHRoZSBiZXN0IHdheSBvZiBlYXJuaWluZyBtb25leS4uIENyZWF0aW5nIGEgZ29vZCBhcHAobm8gYXBwIHNob3VsZG50IGJlIHNvbGQgZm9yIG1vb25leSBhcyBpdCB3aWlsbCBkZWNyZWFzZSBubyBvZiB1c2VycykgYnV0Li4gU2luY2UgcGVvcGxlIHVzZSB0aGlzIGFwcCBmb3IgYnVnIGh1bnRpbmcgYW5kIGlmIHRoZXkgZ2V0IHhzcyB3aXRoIHRoaXMgYXBwIG1heWJlIHRoZXkgZG9uYXRlIHNvbWUgYW1vdW50IHRvIGFwcCBkZXYuLiBJIHRvb28gZG8gdGhhdC4uc28geW91IHdpbGwgZWFybiBtdWNoIGlpZiBtdWNoIHBlb3BsZSB1c2UgaXQgYW5kIHRvIG1ha2UgcGVvcGxlIHVzZSBpdCB1IGhhdmUgdG8gY29udGludW9zbHkgZGV2ZWxvcC4gQW5kIG1hbnkgb3RoZXJzIGRvIHNvIGNyZWF0ZSBhIGdvb29kIGFwcC4uIEl0IHdpbGwgYmUgYmVuZWZpY2lhbCBmb3IgYm90aCBkZXZzIGFuZCBvdGhlci4uIENyZWF0ZSAtLWNvb2tpZSBmZWF0dXJlIHRvIHNwZWNpZnkgY29vb2tpZSAtLWhlYWRlciB0byBzcGVjaWZ5IGhlYWRlciBhbmQgc28gb24uCk1ha2UgYSBmZWF0dXJlIGNhbGxlZCAtLWZpbGUgZmVhdHVyZSBmcm9tIHdoaWNoIHdlIGNhbiBhZGQgb3VyIGN1c3RvbSBwYXlsb2FkLi4gT25jZSBwYXlsb29hZCBmcm9tIGEgbGluZS4uIE1ha2Ugc3VyZSB3aGlsZSBhZGRpbmcgY3VzdG9tIHBheWxvYWQgaXQgZGV0ZWN0cyBwcm9vcGVybHkuLiBYc3MgY2FuIGJlIGtub3duIGJ5IGFsZXJ0ICgxKSwgcHJvbXB0ICgxKSxjb25zb2xlLmxvZyAuIExvZywgZG9jdW1lbnQuV3JpdGUgZXR4Li4gU29tZXRpbWVzIGNvbnNvbGUubG9nIGlzIGEgZ29vZCBwYXlsb2FkIGFuZCB0cmlnZ2VycyB4c3Mgd2hpaWxlIGFwcCBkb250IHNob3cuLiBSZWFkIGFsbCBweXRob24gbGlpYnMsIGltcG9ydCBtdWNoIGluY3JlYXNlIGl0cyB1c2VzLi4gVXNlIGJ3YXBwLi4gVHJ5IGJpZy4uCg==
